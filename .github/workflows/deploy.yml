name: Deploy Share-Service and CLI

on:
  push:
    branches: [ main ]

env:
  DROPLET_IP: ${{ secrets.SERVER_IP }}
  DROPLET_USER: root

jobs:
  deploy-cli:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install CLI dependencies
        run: |
          cd cli
          npm ci
          
      - name: Run CLI tests (if available)
        run: |
          cd cli
          npm test || echo "No tests specified, skipping..."
          
      - name: Publish to npm
        run: |
          cd cli
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-cli  # Deploy CLI first, then backend

    steps:
      - name: Deploy Share-Service
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.DROPLET_IP }}
          username: ${{ env.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Exit on any error

            # Clone or update repo
            mkdir -p /opt
            if [ ! -d /opt/share-service/.git ]; then
              echo "Cloning repo into /opt/share-service..."
              rm -rf /opt/share-service
              git clone https://github.com/harsh3dev/shareio.git /opt/share-service
            else
              echo "Repo already exists, pulling latest..."
              cd /opt/share-service && git pull origin main
            fi

            cd /opt/share-service

            # Build and start containers locally
            docker-compose build --no-cache
            docker-compose up -d

            # Clean unused images
            docker image prune -f
