name: Deploy Share-Service and CLI

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: false
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  DROPLET_IP: ${{ secrets.SERVER_IP }}
  DROPLET_USER: root

jobs:
  deploy-cli:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow writing to repository
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install CLI dependencies
        run: |
          cd cli
          npm ci
          
      - name: Auto-increment version
        id: version
        run: |
          cd cli
          # Use input version bump type, or default to patch
          VERSION_BUMP="${{ github.event.inputs.version_bump || 'patch' }}"
          echo "Bumping $VERSION_BUMP version..."
          npm version $VERSION_BUMP --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
      - name: Update User-Agent in API client
        run: |
          cd cli
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          # Use Node.js to update the file (cross-platform)
          node -e "
            const fs = require('fs');
            const path = './src/services/apiClient.js';
            let content = fs.readFileSync(path, 'utf8');
            content = content.replace(/'LiteShare-CLI\/[0-9]+\.[0-9]+\.[0-9]+'/g, \"'LiteShare-CLI/$NEW_VERSION'\");
            fs.writeFileSync(path, content);
            console.log('Updated User-Agent to LiteShare-CLI/$NEW_VERSION');
          "
          
      - name: Run CLI tests (if available)
        run: |
          cd cli
          npm test || echo "No tests specified, skipping..."
          
      - name: Publish to npm
        run: |
          cd cli
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Commit version changes
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add cli/package.json cli/src/services/apiClient.js
          git commit -m "ðŸš€ Auto-bump CLI version to v$NEW_VERSION [skip ci]" || echo "No changes to commit"
          git push

  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-cli  # Deploy CLI first, then backend

    steps:
      - name: Deploy Share-Service
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.DROPLET_IP }}
          username: ${{ env.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Exit on any error

            # Clone or update repo
            mkdir -p /opt
            if [ ! -d /opt/share-service/.git ]; then
              echo "Cloning repo into /opt/share-service..."
              rm -rf /opt/share-service
              git clone https://github.com/harsh3dev/shareio.git /opt/share-service
            else
              echo "Repo already exists, pulling latest..."
              cd /opt/share-service && git pull origin main
            fi

            cd /opt/share-service

            # Build and start containers locally
            docker-compose build --no-cache
            docker-compose up -d

            # Clean unused images
            docker image prune -f
